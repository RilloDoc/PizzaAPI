[
  {
    "ContainingType": "PizzaDB.Controllers.OrdiniController",
    "Method": "AddAddress",
    "RelativePath": "api/Ordini/AddAddress",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "addressDTO",
        "Type": "AddressDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "AddressResDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "PizzaDB.Controllers.OrdiniController",
    "Method": "AddCustomer",
    "RelativePath": "api/Ordini/AddCustomer",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "customerDTO",
        "Type": "PizzaDB.Tabs.DTO.CustomerDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "PizzaDB.Tabs.DTO.CustomerResDTO",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "PizzaDB.Controllers.OrdiniController",
    "Method": "AddOrder",
    "RelativePath": "api/Ordini/AddOrder",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "orderDTO",
        "Type": "PizzaDB.Tabs.DTO.OrderDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PizzaDB.Controllers.OrdiniController",
    "Method": "AddPizzas",
    "RelativePath": "api/Ordini/AddPizzas",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "pizzaListDTO",
        "Type": "PizzaDB.Tabs.DTO.PizzaListDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PizzaDB.Controllers.OrdiniController",
    "Method": "GetAllOrder",
    "RelativePath": "api/Ordini/GetAllOrders",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[PizzaDB.Tabs.OrderResDTO, PizzaDB, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "PizzaDB.Controllers.OrdiniController",
    "Method": "GetCustomer",
    "RelativePath": "api/Ordini/GetCustomer",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "PizzaDB.Controllers.OrdiniController",
    "Method": "SearchAddresses",
    "RelativePath": "api/Ordini/SearchAddresses",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "query",
        "Type": "System.String",
        "IsRequired": false
      }
    ],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.List\u00601[[AddressResDTO, PizzaDB, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "PizzaDB.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[PizzaDB.WeatherForecast, PizzaDB, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  }
]